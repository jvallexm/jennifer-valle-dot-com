{"version":3,"sources":["components/Header.js","components/Repo.js","components/Automation.js","components/Web.js","components/Content.js","components/Music.js","components/TitleCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","id","Row","Col","sm","xs","src","alt","onClick","window","open","title","octokit","Octokit","rest","repos","get","Repo","props","state","repo","display","index","this","then","result","setState","name","data","url","html_url","description","language","topics","style","marginTop","marginBottom","getStyle","e","preventDefault","backgroundColor","marginRight","React","Component","owner","Automation","md","map","Web","Content","bgImage","children","Music","TitleCard","App","Navbar","bg","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cc61f37.chunk.js","sourcesContent":["import \"./Header.css\"\nimport {Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\n\n//16.13.0\n\nfunction Header() {\n  return (\n    <header className=\"text-center container-fluid\">\n      <div id=\"head-content\" className=\"text-center container-fluid\">\n        <Row id=\"face-row\">\n          <Col sm={2} id=\"face-box\" xs={5}>\n            <img id=\"my-face\" src=\"assets/images/myface.jpeg\" alt=\"jennifer valle\"/>\n          </Col>\n          <Col id=\"title\" sm={3} xs={6}>\n            <h3 className=\"human-name\">jennifer valle</h3>\n            <p className=\"subtitle\">human software developer</p>\n            <p id=\"soci\">\n              <i\n                className=\"fa fa-github\"\n                onClick={() => window.open(`https://github.com/jvallexm`)}\n                title={\"GitHub\"}\n              />\n              <i\n                className=\"fa fa-linkedin\"\n                onClick={() =>\n                  window.open(`https://www.linkedin.com/in/jennifer-valle/`)\n                }\n                title={\"Connect on LinkedIn\"}\n              />\n              <i\n                className=\"fa fa-envelope\"\n                onClick={() => window.open(\"mailto:jvallexm@gmail.com\")}\n              />\n            </p>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"bg-white left\"></Col>\n        </Row>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import { Octokit } from \"octokit\";\nimport React from \"react\";\nconst octokit = new Octokit().rest.repos.get;\n\nclass Repo extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        repo: this.props.repo,\n        display: null,\n        index: this.props.index,\n      };\n    }\n  \n    componentDidMount() {\n      octokit(this.state.repo).then((result) => {\n        this.setState({\n          display: {\n            name: result.data.name,\n            url: result.data.html_url,\n            description: result.data.description,\n            language: result.data.language,\n            topics: result.data.topics,\n          },\n        });\n      });\n    }\n  \n    getStyle(index) {\n      let style = {\n        marginTop: \"0px\",\n        marginBottom: \"0px\",\n      };\n      if (index !== 2) {\n        style.marginBottom = \"10px\";\n      }\n      if (index !== 0) {\n        style.marginTop = \"5px\";\n      }\n      return style;\n    }\n  \n    render() {\n      return (\n        <div\n          className=\"github-repos-item github-repos-box\"\n          style={this.getStyle(this.state.index)}\n        >\n          {this.state.display ? (\n            <div className=\"github-repos-content\">\n              <span\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(this.state.display.url);\n                }}\n                className=\"react-github-repos-text link\"\n              >\n                {this.state.display.name}\n              </span>\n              <p className=\"github-repos-desc\">\n                {this.state.display.description}\n              </p>\n              <p className=\"github-repos-language-p\">\n                <span className=\"github-repos-language-span\">\n                  <span\n                    className=\"github-repos-langage-color\"\n                    style={{ backgroundColor: \"#ccc\", marginRight: \"5px\" }}\n                  />\n                  <span>{this.state.display.language}</span>\n                </span>\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n  }\n\n  export default Repo;","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport Repo from \"./Repo\";\n\nconst repos = [\n  { owner: \"Cloud-Schematics\", repo: \"gcat-vpc-hub-spoke-cluster\" },\n  { owner: \"Cloud-Schematics\", repo: \"gcat-landing-zone-child-account\" },\n  { owner: \"Cloud-Schematics\", repo: \"openshift-hub-and-spoke-vpc-arch\"}\n];\n\nfunction Automation() {\n  return (\n    <Row>\n      <Col md={6} className=\"mobile-bottom\">\n        <div className=\"left words github-repos-box middle-text tall\">\n          <p>\n            Jennifer has created over 50 open-source Terraform templates for IBM\n            Cloud, many of which can be found at the{\" \"}\n            <span\n              onClick={() => {\n                window.open(\"https://github.com/Cloud-Schematics\");\n              }}\n              className=\"react-github-repos-text link\"\n            >\n              IBM Cloud Schematics Github\n            </span>\n            . These templates are used internally by the IBM Cloud Terraform\n            Provider team and externally by IBM clients worldwide.\n            <br />\n            <br />\n            In 2019, she recieved an IBM Outstanding Technical Achievement Award for\n            contributions to open-source IBM Cloud Terraform templates.\n          </p>\n        </div>\n      </Col>\n      <Col className=\"left\" md={6}>\n        {repos.map((data, index) => (\n          <Repo key={`repo-${index}`} repo={data} index={index} />\n        ))}\n      </Col>\n    </Row>\n  );\n}\n\nexport default Automation;\n","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport Repo from \"./Repo\";\n\nconst repos = [\n  { owner: \"IBM\", repo: \"tfmdcli\" },\n  { owner: \"jvallexm\", repo: \"quizfeed\" },\n  { owner: \"Cloud-Schematics\", repo: \"openshift-hub-and-spoke-vpc-arch\"}\n];\n\nfunction Web() {\n  return (\n    <Row>\n\n      <Col className=\"left\" md={6}>\n        {repos.map((data, index) => (\n          <Repo key={`repo-${index}`} repo={data} index={index} />\n        ))}\n      </Col>\n      <Col md={6} className=\"mobile-bottom\">\n        <div className=\"left words github-repos-box middle-text tall\">\n          <p>\n            Words\n          </p>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Web;\n","import React from \"react\";\nimport \"./Content.css\"\nimport { Parallax } from \"react-parallax\";\n\nconst Content = function(props) {\n    return (\n        <Parallax bgImage={props.bgImage}>\n        <div className=\"far text-center container-fluid big-big middle-text\" id=\"auto\">\n          <div className=\"pull text-center container-fluid\">\n            {props.children}\n          </div>\n        </div>\n      </Parallax>\n    )\n}\nexport default Content;","import { Row, Col } from \"react-bootstrap\";\nimport { Parallax } from \"react-parallax\";\nimport React from \"react\";\n\nfunction Music() {\n    return (            <Row>\n        <Col sm={6}>\n          <div>\n            <Parallax\n              bgImage={\"assets/images/liveatpinhook.png\"}\n              className=\"snake cut-corners\"\n            >\n              <h2 id=\"band-name\">snake shaming</h2>\n            </Parallax>\n          </div>\n        </Col>\n        <Col sm={6}>\n          <div className=\"\">\n            {/*<iframe\n              className=\"cut-corners\"\n              src=\"https://open.spotify.com/embed/artist/3sQSwOZ0rjL8PK3XsffTsh?utm_source=generator&theme=0\"\n              height=\"288px\"\n              allowfullscreen=\"\"\n              allow=\"encrypted-media; fullscreen; picture-in-picture\"\n              title=\"spotify\"\n            ></iframe>*/}\n          </div>\n        </Col>\n      </Row>)\n}\n\nexport default Music;","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst TitleCard = function (props) {\n  return (\n    <div className=\"text-center container-fluid pull\">\n      <Row>\n        <Col className=\"left\">\n          <h1>{props.name}</h1>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default TitleCard;\n","import \"./App.css\";\nimport \"./react-github-repos.css\";\nimport { Navbar, Container, Row, Col } from \"react-bootstrap\";\n\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Automation from \"./components/Automation\";\nimport Web from './components/Web';\nimport Content from \"./components/Content\";\nimport Music from \"./components/Music\";\nimport TitleCard from \"./components/TitleCard\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"light\">\n          <Container>welcome</Container>\n        </Navbar>\n        {/*<Parallax\n          bgImage={\"assets/images/placeholder.jpg\"}\n          bgStyle={{ height: \"100%\" }}\n        >*/}\n        <Header /> \n\n        <div id=\"stuff\" className=\"text-center container-fluid\">\n          <TitleCard name=\"enterprise infrastructure automation\" />\n          <Content bgImage=\"assets/images/wires.jpg\">\n            <Automation/>\n          </Content>\n          <TitleCard name=\"web development\" />\n          <Content bgImage=\"assets/images/web-web.jpg\">\n            <Web/>\n          </Content>\n          <div className=\"far text-center container-fluid\"></div>\n          <TitleCard name=\"music\" />\n          <Content bgImage=\"assets/images/guitar.jpg\">\n            <Music />\n          </Content>\n        </div>\n        {/*</Parallax>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}